{
    "swagger": "2.0",
    "info": {
        "description": "This is the API for the Gists auth service",
        "title": "Gists auth service API",
        "contact": {
            "name": "Courtcircuits",
            "url": "https://github.com/courtcircuits",
            "email": "tristan-mihai.radulescu@etu.umontpellier.fr"
        },
        "version": "0.1"
    },
    "paths": {
        "/auth/local/begin": {
            "post": {
                "description": "Use this endpoint to authenticate with code",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate with code",
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.HTTPErrorMessage"
                        }
                    }
                }
            }
        },
        "/auth/local/verify": {
            "post": {
                "description": "Use this endpoint to verify auth token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Verify auth token",
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.HTTPErrorMessage"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "get": {
                "description": "Use this endpoint to logout (clear cookies)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout",
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.HTTPErrorMessage"
                        }
                    }
                }
            }
        },
        "/auth/renew": {
            "get": {
                "description": "Use this endpoint to renew access token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Renew access token",
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.HTTPErrorMessage"
                        }
                    }
                }
            }
        },
        "/auth/{provider}": {
            "get": {
                "description": "Use this endpoint to authenticate with redirect",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate with redirect",
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.HTTPErrorMessage"
                        }
                    }
                }
            }
        },
        "/auth/{provider}/callback": {
            "get": {
                "description": "Use this endpoint to complete the OAuth2 flow",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "OAuth2 Callback",
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.HTTPErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.HTTPErrorMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "http.HTTPErrorMessage": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    }
}