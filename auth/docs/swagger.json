{
    "swagger": "2.0",
    "info": {
        "description": "This is the API for the Gists auth service",
        "title": "Gists auth service API",
        "contact": {
            "name": "Courtcircuits",
            "url": "https://github.com/courtcircuits",
            "email": "tristan-mihai.radulescu@etu.umontpellier.fr"
        },
        "version": "0.1"
    },
    "paths": {
        "/auth/local/begin": {
            "post": {
                "description": "Use this endpoint to authenticate with code",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate with code",
                "parameters": [
                    {
                        "description": "Email",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.AuthLocalValidator"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.HTTPMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.HTTPErrorMessage"
                        }
                    }
                }
            }
        },
        "/auth/local/verify": {
            "post": {
                "description": "Use this endpoint to verify auth token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Verify auth token",
                "parameters": [
                    {
                        "description": "Token",
                        "name": "token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.AuthLocalVerificationValidator"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.HTTPTokens"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.HTTPErrorMessage"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "get": {
                "description": "Use this endpoint to logout (clear cookies)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout",
                "responses": {
                    "302": {
                        "description": "Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.HTTPErrorMessage"
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "description": "Use this endpoint to introspect the token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Introspect",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.HTTPUserIntrospection"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.HTTPErrorMessage"
                        }
                    }
                }
            }
        },
        "/auth/renew": {
            "get": {
                "description": "Use this endpoint to renew access token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Renew access token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.HTTPTokens"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.HTTPErrorMessage"
                        }
                    }
                }
            }
        },
        "/auth/{provider}": {
            "get": {
                "description": "Use this endpoint to authenticate with redirect",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate with redirect",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider name",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.HTTPErrorMessage"
                        }
                    }
                }
            }
        },
        "/auth/{provider}/callback": {
            "get": {
                "description": "Use this endpoint to complete the OAuth2 flow",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "OAuth2 Callback",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.HTTPMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.HTTPErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.HTTPErrorMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "http.AuthLocalValidator": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "http.AuthLocalVerificationValidator": {
            "type": "object",
            "required": [
                "email",
                "token"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "http.HTTPErrorMessage": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "http.HTTPMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "http.HTTPTokens": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "http.HTTPUserIntrospection": {
            "type": "object",
            "properties": {
                "claims": {
                    "$ref": "#/definitions/types.JWTClaims"
                },
                "federated_identity": {
                    "$ref": "#/definitions/types.FederatedIdentity"
                },
                "user": {
                    "$ref": "#/definitions/types.User"
                }
            }
        },
        "jwt.NumericDate": {
            "type": "object",
            "properties": {
                "time.Time": {
                    "type": "string"
                }
            }
        },
        "types.FederatedIdentity": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "types.JWTClaims": {
            "type": "object",
            "properties": {
                "aud": {
                    "description": "the `aud` (Audience) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.3",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exp": {
                    "description": "the `exp` (Expiration Time) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.4",
                    "allOf": [
                        {
                            "$ref": "#/definitions/jwt.NumericDate"
                        }
                    ]
                },
                "iat": {
                    "description": "the `iat` (Issued At) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.6",
                    "allOf": [
                        {
                            "$ref": "#/definitions/jwt.NumericDate"
                        }
                    ]
                },
                "iss": {
                    "description": "the `iss` (Issuer) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.1",
                    "type": "string"
                },
                "jti": {
                    "description": "the `jti` (JWT ID) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.7",
                    "type": "string"
                },
                "nbf": {
                    "description": "the `nbf` (Not Before) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.5",
                    "allOf": [
                        {
                            "$ref": "#/definitions/jwt.NumericDate"
                        }
                    ]
                },
                "sub": {
                    "description": "the `sub` (Subject) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.2",
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "types.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}