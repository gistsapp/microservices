definitions:
  http.AuthLocalValidator:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  http.AuthLocalVerificationValidator:
    properties:
      email:
        type: string
      token:
        type: string
    required:
    - email
    - token
    type: object
  http.HTTPErrorMessage:
    properties:
      error:
        type: string
    type: object
  http.HTTPMessage:
    properties:
      message:
        type: string
    type: object
  http.HTTPTokens:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  http.HTTPUserIntrospection:
    properties:
      claims:
        $ref: '#/definitions/types.JWTClaims'
      federated_identity:
        $ref: '#/definitions/types.FederatedIdentity'
      user:
        $ref: '#/definitions/types.User'
    type: object
  jwt.NumericDate:
    properties:
      time.Time:
        type: string
    type: object
  types.FederatedIdentity:
    properties:
      data:
        type: string
      id:
        type: string
      provider:
        type: string
      user_id:
        type: string
    type: object
  types.JWTClaims:
    properties:
      aud:
        description: the `aud` (Audience) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.3
        items:
          type: string
        type: array
      exp:
        allOf:
        - $ref: '#/definitions/jwt.NumericDate'
        description: the `exp` (Expiration Time) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.4
      iat:
        allOf:
        - $ref: '#/definitions/jwt.NumericDate'
        description: the `iat` (Issued At) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.6
      iss:
        description: the `iss` (Issuer) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.1
        type: string
      jti:
        description: the `jti` (JWT ID) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.7
        type: string
      nbf:
        allOf:
        - $ref: '#/definitions/jwt.NumericDate'
        description: the `nbf` (Not Before) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.5
      sub:
        description: the `sub` (Subject) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.2
        type: string
      user_id:
        type: string
    type: object
  types.User:
    properties:
      email:
        type: string
      id:
        type: string
      picture:
        type: string
      username:
        type: string
    type: object
info:
  contact:
    email: tristan-mihai.radulescu@etu.umontpellier.fr
    name: Courtcircuits
    url: https://github.com/courtcircuits
  description: This is the API for the Gists auth service
  title: Gists auth service API
  version: "0.1"
paths:
  /auth/{provider}:
    get:
      description: Use this endpoint to authenticate with redirect
      parameters:
      - description: Provider name
        in: path
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.HTTPErrorMessage'
      summary: Authenticate with redirect
      tags:
      - auth
  /auth/{provider}/callback:
    get:
      description: Use this endpoint to complete the OAuth2 flow
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.HTTPMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.HTTPErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.HTTPErrorMessage'
      summary: OAuth2 Callback
      tags:
      - auth
  /auth/local/begin:
    post:
      description: Use this endpoint to authenticate with code
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/http.AuthLocalValidator'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.HTTPMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.HTTPErrorMessage'
      summary: Authenticate with code
      tags:
      - auth
  /auth/local/verify:
    post:
      description: Use this endpoint to verify auth token
      parameters:
      - description: Token
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/http.AuthLocalVerificationValidator'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.HTTPTokens'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.HTTPErrorMessage'
      summary: Verify auth token
      tags:
      - auth
  /auth/logout:
    get:
      description: Use this endpoint to logout (clear cookies)
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.HTTPErrorMessage'
      summary: Logout
      tags:
      - auth
  /auth/me:
    get:
      description: Use this endpoint to introspect the token
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.HTTPUserIntrospection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.HTTPErrorMessage'
      summary: Introspect
      tags:
      - auth
  /auth/renew:
    get:
      description: Use this endpoint to renew access token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.HTTPTokens'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.HTTPErrorMessage'
      summary: Renew access token
      tags:
      - auth
swagger: "2.0"
